{"ast":null,"code":"var _jsxFileName = \"/Users/carlosmartinez/Desktop/starwars/src/view/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CardPlanets from '../components/CardPlanets';\nimport CardVehicles from '../components/CardVehicles';\nimport CardPeople from \"../components/CardPeople\";\nimport { Context } from \"../store/appContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  /*\n  const [planets, setPlanets] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [people, setPeople] = useState([]);\n  */\n  const {\n    store,\n    actions\n  } = useContext(Context); //Planetas\n\n  useEffect(() => {\n    actions.getPlanets();\n  }, []); //Vehicles\n\n  useEffect(() => {\n    actions.getVehicles();\n  }, []);\n  /*\n      //Vehicle\n      useEffect(() => {\n          fetch(\"https://swapi.dev/api/vehicles/\", {\n              method: \"GET\",\n              headers: { \"Content-Type\": \"application/json\" }\n          }).then(response => response.json())\n              .then(data => setVehicles(data.results))\n      }, [])\n  \n      //People\n      useEffect(() => {\n          fetch(\"https://swapi.dev/api/people/\", {\n              method: \"GET\",\n              headers: { \"Content-Type\": \"application/json\" }\n          }).then(response => response.json())\n              .then(data => setPeople(data.results))\n      }, []) */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Planets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\",\n        children: store.planets.map((planet, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(CardPlanets, {\n            data: planet,\n            image: \"https://isccoquimbo.cl/images/400X200.gif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // {store.planets.map((planet) => <p>{planet.name}</p>) }\n\n\n_s(Home, \"+k++ktfcFtYZTZBOzlvu+BsimrY=\");\n\n_c = Home;\nexport default Home;\n/*\n              <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n             {planets.map((planet, i) =><div className=\"col-md-4\"> <CardPlanets data={planet} image= \"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n              </div>\n              */\n\n/*\n <div class=\"container-fluid\">\n <h1>Vehicles</h1>\n <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n{vehicles.map((vehicle, i) =><div className=\"col-md-4\"> <CardVehicles data={vehicle} image= \"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n </div>\n</div>\n\n<div class=\"container-fluid\">\n <h1>Peoples</h1>\n <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n{people.map((people, i) =><div className=\"col-md-4\"> <CardPeople data={people} image= \"https://isccoquimbo.cl/images/400X200.gif\"/></div>)}\n </div>\n</div>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/carlosmartinez/Desktop/starwars/src/view/Home.js"],"names":["React","useEffect","useState","useContext","CardPlanets","CardVehicles","CardPeople","Context","Home","store","actions","getPlanets","getVehicles","planets","map","planet","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,qBAAxB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf;AACJ;AACA;AACA;AACA;AACI,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBP,UAAU,CAACI,OAAD,CAArC,CAPe,CASf;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,UAAR;AAEH,GAHQ,EAGN,EAHM,CAAT,CAVe,CAef;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACE,WAAR;AAEH,GAHQ,EAGN,EAHM,CAAT;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,2DAAf;AAAA,kBACKH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,kBAAe;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,uCAA2B,QAAC,WAAD;AAAa,YAAA,IAAI,EAAED,MAAnB;AAA2B,YAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjC;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH,CApDD,C,CAqDA;;;GArDMP,I;;KAAAA,I;AAuDN,eAAeA,IAAf;AACC;AACD;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport CardPlanets from '../components/CardPlanets';\nimport CardVehicles from '../components/CardVehicles';\nimport CardPeople from \"../components/CardPeople\";\nimport { Context } from \"../store/appContext\";\n\nconst Home = () => {\n\n    /*\n    const [planets, setPlanets] = useState([]);\n    const [vehicles, setVehicles] = useState([]);\n    const [people, setPeople] = useState([]);\n    */\n    const { store, actions } = useContext(Context);\n\n    //Planetas\n    useEffect(() => {\n        actions.getPlanets();\n\n    }, [])\n\n    //Vehicles\n    useEffect(() => {\n        actions.getVehicles();\n\n    }, [])\n    /*\n        //Vehicle\n        useEffect(() => {\n            fetch(\"https://swapi.dev/api/vehicles/\", {\n                method: \"GET\",\n                headers: { \"Content-Type\": \"application/json\" }\n            }).then(response => response.json())\n                .then(data => setVehicles(data.results))\n        }, [])\n    \n        //People\n        useEffect(() => {\n            fetch(\"https://swapi.dev/api/people/\", {\n                method: \"GET\",\n                headers: { \"Content-Type\": \"application/json\" }\n            }).then(response => response.json())\n                .then(data => setPeople(data.results))\n        }, []) */\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <h1>Planets</h1>\n                <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n                    {store.planets.map((planet, i) => <div className=\"col-md-4\"> <CardPlanets data={planet} image=\"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n                </div>\n\n            </div>\n\n\n        </>\n    );\n}\n// {store.planets.map((planet) => <p>{planet.name}</p>) }\n\nexport default Home;\n /*\n               <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n              {planets.map((planet, i) =><div className=\"col-md-4\"> <CardPlanets data={planet} image= \"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n               </div>\n               */\n/*\n <div class=\"container-fluid\">\n <h1>Vehicles</h1>\n <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n{vehicles.map((vehicle, i) =><div className=\"col-md-4\"> <CardVehicles data={vehicle} image= \"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n </div>\n</div>\n\n<div class=\"container-fluid\">\n <h1>Peoples</h1>\n <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-3 pb-3 pt-3\">\n{people.map((people, i) =><div className=\"col-md-4\"> <CardPeople data={people} image= \"https://isccoquimbo.cl/images/400X200.gif\"/></div>)}\n </div>\n</div>\n*/"]},"metadata":{},"sourceType":"module"}