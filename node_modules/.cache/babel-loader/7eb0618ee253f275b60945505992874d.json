{"ast":null,"code":"var _jsxFileName = \"/Users/carlosmartinez/Desktop/starwars/src/view/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from '../components/Cards'; //import { useState } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [planetas, setPlanetas] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [people, setPeople] = useState([]); //Planetas\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/planets/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setPlanetas(data.results));\n  }, []); //Vehicle\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/vehicles/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setVehicles(data.results));\n  }, []); //People\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/people/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => setPeople(data.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4 pt-2 mb-4\",\n        children: people.map((peoples, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            data: peoples,\n            image: \"https://isccoquimbo.cl/images/400X200.gif\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), planetas.map((planeta, i) => /*#__PURE__*/_jsxDEV(Card, {\n      data: planeta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }, this)), vehicles.map((vehicles, i) => /*#__PURE__*/_jsxDEV(Card, {\n      data: vehicles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }, this)), people.map((people, i) => /*#__PURE__*/_jsxDEV(Card, {\n      data: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Home, \"lPtjrbUH+eTbDKUZ7ccUdBrY/Fo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/carlosmartinez/Desktop/starwars/src/view/Home.js"],"names":["React","useEffect","useState","Card","Home","planetas","setPlanetas","vehicles","setVehicles","people","setPeople","fetch","method","headers","then","response","json","data","results","map","peoples","i","planeta"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from \"react\";\nimport Card from '../components/Cards';\n//import { useState } from \"react\";\n\nconst Home = () => {\n    const [planetas, setPlanetas] = useState([]);\n    const [vehicles, setVehicles] = useState([]);\n    const [people, setPeople] = useState([]);\n\n    //Planetas\n    useEffect(()=> {\n        fetch(\"https://swapi.dev/api/planets/\", {\n            method:\"GET\",\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(response => response.json())\n        .then(data => setPlanetas(data.results))\n    }, [])\n\n    //Vehicle\n    useEffect(()=> {\n    fetch(\"https://swapi.dev/api/vehicles/\", {\n            method:\"GET\",\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(response => response.json())\n        .then(data => setVehicles(data.results))\n    }, [])\n\n    //People\n    useEffect(()=> {\n        fetch(\"https://swapi.dev/api/people/\", {\n                method:\"GET\",\n                headers: {\"Content-Type\": \"application/json\"}\n            }).then(response => response.json())\n            .then(data => setPeople(data.results))\n        }, [])\n\n\n    return (\n        <>\n            <h1>Cards</h1>\n            <div className=\"row\">\n                <h1>Characters</h1>\n                <div className=\"scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4 pt-2 mb-4\">\n                    {people.map((peoples, i) => <div className=\"col-md-3\"><Card data={peoples} image=\"https://isccoquimbo.cl/images/400X200.gif\" /></div>)}\n                </div>\n            </div>\n        {planetas.map((planeta, i) => <Card data={planeta}/>)}\n        {vehicles.map((vehicles, i) => <Card data={vehicles}/>)}\n        {people.map((people, i) => <Card data={people}/>)}\n        \n        \n        </>\n    );\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}